import os
import requests
from dotenv import load_dotenv

load_dotenv()
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY_1")

def call_llm(prompt: str) -> str:
    """
    Calls the Gemini 2.0 Flash model using Google's API and returns the generated text.
    
    Args:
        prompt (str): The input prompt for the LLM.

    Returns:
        str: The response generated by Gemini or an error message.
    """
    
    url = f"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key={GEMINI_API_KEY}"
    headers = {"Content-Type": "application/json"}
    body = {
        "contents": [
            {
                "parts": [
                    {"text": prompt}
                ]
            }
        ]
    }

    try:
        response = requests.post(url, json=body, headers=headers)
        response.raise_for_status()
        data = response.json()

        # Extract and return the generated response text
        return data["candidates"][0]["content"]["parts"][0]["text"]
    except Exception as e:
        print("‚ùå Error calling Gemini:", e)
        return "Error generating content."
